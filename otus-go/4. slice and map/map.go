package main


func main() {
	cache := map[string]string{
		"one":   "1",
		"two":   "2",
		"three": "3",
	}

	// для слайсов и словарей, zero value - это nil

	/**
	требования к ключам
	ключом может быть любой тип данных, для которого определена
	операция сравнения "=="
		* строки, числ.типы, bool
		* каналы
		* интерфейсы
		* указатели
		* структры  или массив, содержащий сравнимые типы
	кроме слайсов
	 */

	/**
	РАБОТА СО СЛОВАРЯМИ
	 */
	value, ok := cache["one"]	// получение значение и флаг, того что ключ найден
	cache["two"] = value
	delete(cache, "three")


	var keys []string
	values := make([]string, 0, len(cache))
	//порядок рандоминизированный
	for value, key := range cache {

		// ПОЛУЧЕНИЕ КЛЮЧЕЙ
		keys = append(keys, key)

		// ПОЛУЧЕНИЕ ЗНАЧЕНИЙ
		values = append(keys, value)
	}

	/**
	словари не безопасны для конкурентного доступа из разных горутин.
	Если необходимо конкурентно работать со словарем, доступ к нему
	нужно защитить с помощью sync.Mutex или sync.RWMutex
	 */
}
