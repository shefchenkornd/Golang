package main

import "fmt"

/**
В Go есть полноценные указатели, но нет адресной арифметики
 */
func main() {
	x := 1 // тип int

	// получаем указатель на переменную
	xPtr := &x // тип *int

	// если нужно создать тип с указателем, то ставится "звёздочка"
	var p *int // тип *int, значение nil

	fmt.Printf("%v \n", x)
	fmt.Printf("%v \n", xPtr)
	fmt.Printf("%v \n", p)

	// получить значение по указателю
	var a int = 1
	var b *int = &a // получили указатель на переменную

	// чтобы получить значение из переменной "b" (которая является указателем)
	// необходимо поставить "звёздочку"
	fmt.Printf("%d %d \n", a, *b) // 1 1
	a++
	fmt.Printf("%d %d \n", a, *b) // 2 2
	*b++
	fmt.Printf("%d %d \n", a, *b) // 3 3

	c :=100
	b = &c
	fmt.Printf("%d %d \n", a, *b) // 3 100
}